
version: "3"


services:

  # MySQL Server for Sonarqube, Redmine and Gitbucket
  mysql:
    image: mysql:5.7
    container_name: mysql-server
    expose:
      - "3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - "/var/lib/docker/volumes/mysql:/var/lib/mysql"
      - "./mysql/initdb.d:/docker-entrypoint-initdb.d"
    command: --character-set-server=utf8 --collation-server=utf8_general_ci --explicit-defaults-for-timestamp=true --skip-name-resolve=true


  # Sonarqube that provides functions to analyze source code
  sonarqube:
    image: sonarqube:6.3.1-alpine
    container_name: sonarqube
    expose:
      - "9000"
    environment:
      SONARQUBE_JDBC_URL: "jdbc:mysql://mysql-server/sonar?useSSL=false&useUnicode=true&characterEncoding=utf8&rewriteBatchedStatements=true&useConfigs=maxPerformance"
    command: -Dsonar.web.context=/sonarqube
    volumes:
      - "/var/lib/docker/volumes/sonarqube:/opt/sonarqube/data"
    depends_on:
      - mysql


  # Sonatype Nexus3 as inhouse repositories
  nexus:
    image: sonatype/nexus3
    container_name: sonatype-nexus
    expose:
      - "8081"
    environment:
      NEXUS_CONTEXT: nexus
    volumes:
      - "/var/lib/docker/volumes:/sonatype-work"


  # Redmine
  redmine:
    image: sameersbn/redmine
    container_name: redmine
    expose:
      - "8080"
    environment:
      # DB configurations
      DB_HOST: mysql-server
      DB_NAME: redmine
      DB_USER: redmine
      DB_PASS: redmine
      # Web
      REDMINE_RELATIVE_URL_ROOT: /redmine
      NGINX_ENABLED:             "false"
    volumes:
      - "/var/lib/docker/volumes/redmine/plugins:/home/redmine/data/plugins"
      - "/var/lib/docker/volumes/redmine/themes:/home/redmine/data/themes"
    depends_on:
      - mysql


  # Knowledge
  knowledge:
    build: knowledge
    container_name: knowledge
    expose:
      - "8080"
    environment:
      JAVA_OPTS: "-Djava.security.edg=file:///dev/urandom"
    volumes:
      - "/var/lib/docker/volumes/knowledge:/root/.knowledge"


  # Gitbucket
  gitbucket:
    build: gitbucket
    container_name: gitbucket
    expose:
      - "8080"
    environment:
      # Use MySQL to store data
      MYSQL_DB_URL:      "jdbc:mysql://mysql-server/gitbucket?useSSL=false&useUnicode=true&characterEncoding=utf8&rewriteBatchedStatements=true"
      MYSQL_DB_USER:     "gitbucket"
      MYSQL_DB_PASSWORD: "gitbucket"
    command: --prefix=/gitbucket
    volumes:
      - "/var/lib/docker/volumes/gitbucket:/root/.gitbucket"
    depends_on:
      - mysql


  # Rundeck
  rundeck:
    build: rundeck
    container_name: rundeck
    expose:
      - "4440"
    volumes:
      - "/var/lib/docker/volumes/rundeck:/opt/rundeck/server/config"
    depends_on:
      - mysql


  # Jenkins
  jenkins:
    image: jenkins:latest
    container_name: jenkins
    expose:
      - "8080"
    volumes:
      - "/var/lib/docker/volumes/jenkins:/var/jenkins_home"
    environment:
      JENKINS_OPTS: "--prefix=/jenkins"


  # Rancher
  rancher:
    image: rancher/server
    container_name: rancher
    ports:
      - "58080:8080"
    command: --db-host mysql-server
    depends_on:
      - mysql


  # Jupyterhub
  jupyterhub:
    build: jupyterhub
    container_name: jupyterhub
    ports:
      - "58000:8000"
    volumes:
      - "/var/lib/docker/volumes/jupyterhub:/home"


  # Reverse proxy
  nginx:
    image: nginx:1.13.0-alpine
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - "/var/lib/docker/volumes/nginx/conf.d:/etc/nginx/conf.d"
      - "/var/lib/docker/volumes/nginx/html:/usr/share/nginx/html"
